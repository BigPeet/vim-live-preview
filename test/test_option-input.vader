Include: setup.vader

Execute (Input Test Helpers):
  function! RangeTest(start, end)
    return [a:start . ',' .  a:end]
  endfunction
  command! -range=% RangeTestCmd echo join(RangeTest(<line1>, <line2>), "\n")

  function! InputTest(is_async, expected, ...)
    exec "call vlp#EnterPreviewMode(" . join(a:000, ',') . ")"
    if a:is_async
      sleep 100m " sleep since async jobs might need a moment
    endif
    AssertEqual a:expected,
      \ getbufoneline(bufnr(g:def_preview_bufname), 1)
  endfunction


Given (Input Text):
  "1. Line"
  '2. Line'
  3. Line

Execute (Input Range: FuncRef):
  call InputTest(0, '1,3', 'function("RangeTest")', {"input": "range"})

Execute (Input Range: Function Name):
  call InputTest(0, '1,3', "'RangeTest'", {"input": "range"})

Execute (Input Range: Vim Command):
  call InputTest(0, '1,3', "':RangeTestCmd'", {"input": "range"})

Execute (Input Range: Shell Command Job):
  call InputTest(1, '1,3', "':!echo'", {"input": "range"})
  VLPLeave
  call InputTest(1, '1,3', "':!echo <range>'", {"input": "range"})

Execute (Input Range: Shell Command):
  call InputTest(0, '1,3', "':!echo'", {"input": "range", "use_jobs": v:false})
  VLPLeave
  call InputTest(0, '1,3', "':!echo <range>'", {"input": "range", "use_jobs": v:false})
